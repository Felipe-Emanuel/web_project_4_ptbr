!function(){"use strict";var t={user:{section:".profile",name:".profile__title",job:".profile__subtitle"},card:{card:".card",sectionCard:".cards",cardsUl:".cards__ul",cardsTemplate:".cards-template",cardImage:".card__image",cardTitle:".card__title"},buttons:{trash:{cardTrashButton:".card__trash-button"},like:{buttonLiked:"cardlike-button__liked",likeButton:".cardlike-button"},modal:{close:{closeImageButton:".showedImage__close-form"}},validate:{inactive:"popup__submit_inactive"}},popups:{edit:{popupSelector:".popup-edit",openButton:".edit-profile"},addImage:{popupSelector:".popup-addImage",openButton:".add-image"},showedImages:{showedImage:".showedImage",openedImage:".showedImage__image",showedImageTitle:".showedImage__title"}},forms:{editForm:".popup-edit",addImageForm:".popup-addImage"},inputs:{input:".popup__input",submit:".popup__submit"},messages:{error:{errorClass:"form__input-error_active",inputErrorClass:"form__input_type_error"}}},e=[{name:"Vale de Yosemite",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_yosemite.jpg",id:0,isLiked:!1},{name:"Lago Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lake-louise.jpg",id:1,isLiked:!1},{name:"Montanhas Carecas",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_bald-mountains.jpg",id:2,isLiked:!1},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_latemar.jpg",id:3,isLiked:!1},{name:"Parque Nacional da Vanoise ",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_vanoise.jpg",id:4,isLiked:!1},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lago.jpg",id:5,isLiked:!1}],n=t.card,r=n.cardsUl,o=n.cardsTemplate,i=document.querySelector(r),u=t.forms,a=[u.addImageForm,u.editForm],c=t.user,s={userName:c.name,userJob:c.job},l=t.popups.showedImages.showedImage,f=t.popups,p=f.addImage,m=f.edit,y=[{popupSelector:p.popupSelector,openButton:p.openButton},{popupSelector:m.popupSelector,openButton:m.openButton}];function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,h(r.key),r)}}function v(t,e,n){return(e=h(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function h(t){var e=function(t,e){if("object"!==d(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===d(e)?e:String(e)}var _=function(){function t(n,r,o,i){var u=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),v(this,"_handleDelete",(function(t){t.currentTarget.parentNode.remove(),e.splice(u,1)})),v(this,"_handleLike",(function(t){u._isLiked=!u._isLiked,t.classList.toggle(u._config.buttons.like.buttonLiked)})),this._config=n,this._isLiked=r.isLiked,this._title=r.name,this._imageLink=r.link,this._id=r.id,this._templateElement=o,this._handleCardClick=i}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateElement).content.querySelector(this._config.card.card).cloneNode(!0)}},{key:"_openImageModal",value:function(){this._handleCardClick(this._imageLink,this._title)}},{key:"_setEventListeners",value:function(){var t=this;this._element.querySelector(this._config.card.cardImage).addEventListener("click",(function(){return t._openImageModal()})),this._element.querySelector(this._config.buttons.trash.cardTrashButton).addEventListener("click",(function(e){return t._handleDelete(e)})),this._element.querySelector(this._config.buttons.like.likeButton).addEventListener("click",(function(){var e=t._element.querySelector(t._config.buttons.like.likeButton);t._handleLike(e)}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(this._config.card.cardImage).setAttribute("src",this._imageLink),this._element.querySelector(this._config.card.cardTitle).textContent=this._title,this._element}}])&&b(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(),g=function(t){return t.trim().split(" ").map((function(t){return t.charAt(0).toUpperCase()+t.slice(1)})).join(" ")};function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==w(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===w(o)?o:String(o)),r)}var o}var k=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".popup__close-form")}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.remove("closing"),this._popup.classList.add("opening"),this._popup.style.display="flex",document.addEventListener("keydown",this._handleEscClose.bind(this))}},{key:"close",value:function(){var t=this;this._popup.classList.add("closing"),this._popup.classList.remove("opening"),setTimeout((function(){t._popup.style.display="none"}),450),document.removeEventListener("keydown",this._handleEscClose.bind(this))}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._closeButton.addEventListener("click",this.close.bind(this)),this._popup.addEventListener("click",(function(e){e.target===t._popup&&t.close()}))}}])&&S(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function j(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==E(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==E(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===E(o)?o:String(o)),r)}var o}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=O(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},L.apply(this,arguments)}function I(t,e){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},I(t,e)}function O(t){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},O(t)}var P=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&I(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=O(r);if(o){var n=O(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===E(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._image=e._popup.querySelector("".concat(t,"__image")),e._title=e._popup.querySelector("".concat(t,"__title")),e}return e=u,(n=[{key:"openImage",value:function(t,e){this._image.src=t,this._image.alt=e,this._title.textContent=e,L(O(u.prototype),"open",this).call(this)}}])&&j(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(k);function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function T(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==C(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==C(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===C(o)?o:String(o)),r)}var o}var q=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderItems=r,this._renderer=o,this._listElement=document.querySelector(n)}var e,n;return e=t,(n=[{key:"addItems",value:function(t){this._listElement.append(t)}},{key:"renderSection",value:function(){var t=this;this._renderItems.forEach((function(e){var n=t._renderer(e);t.addItems(n)}))}}])&&T(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function B(t){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},B(t)}function V(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==B(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==B(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===B(o)?o:String(o)),r)}var o}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=A(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},R.apply(this,arguments)}function x(t,e){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},x(t,e)}function A(t){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},A(t)}var D=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&x(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=A(r);if(o){var n=A(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===B(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._form=r._popup.querySelector(".form"),r._submitCallback=n,r._buttonConfig=document.querySelector(e),r}return e=u,(n=[{key:"_getInputValues",value:function(){var t=this._form.querySelectorAll(".input"),e={};return t.forEach((function(t){e[t.name]=t.value})),e}},{key:"inputValues",value:function(){return this._getInputValues()}},{key:"close",value:function(){R(A(u.prototype),"close",this).call(this),this._form.reset()}},{key:"setInitialInputValues",value:function(){var t=this;this._form.querySelectorAll(".input").forEach((function(e){var n="name"===e.name||"job"===e.name,r=g(t._getInputValues()[e.name]);n&&e.setAttribute("value",r)}))}},{key:"setEventListeners",value:function(){var t=this;R(A(u.prototype),"setEventListeners",this).call(this),this._buttonConfig.addEventListener("click",(function(){R(A(u.prototype),"open",t).call(t)})),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._submitCallback(t._getInputValues()),t.setInitialInputValues(),t.close()}))}}])&&V(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(k);function N(t){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},N(t)}function U(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==N(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==N(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===N(o)?o:String(o)),r)}var o}var z=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userName=document.querySelector(e),this._userJob=document.querySelectorAll(n)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,job:this._userJob.forEach((function(t){return t.textContent}))}}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.job;console.log(),this._userName.textContent=g(e),this._userJob.forEach((function(t){return t.textContent=g(n)}))}}])&&U(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function F(t){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},F(t)}function J(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==F(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==F(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===F(o)?o:String(o)),r)}var o}var M,Y=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._formElement=document.querySelector(n),this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputs.input)),this._buttonElement=this._formElement.querySelector(this._config.inputs.submit)}var e,n;return e=t,(n=[{key:"_checkInputValidity",value:function(t){t.validity.valid?this.hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_showInputError",value:function(t,e){var n=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._config.messages.error.inputErrorClass),n.textContent=e,n.classList.add(this._config.messages.error.errorClass)}},{key:"hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._config.messages.error.inputErrorClass),e.classList.remove(this._config.messages.error.errorClass),e.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._config.buttons.validate.inactive),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._config.buttons.validate.inactive),this._buttonElement.disabled=!1)}},{key:"enableValidation",value:function(){var t=this;this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),this._inputList.forEach((function(e){e.addEventListener("input",(function(){var n,r,o,i,u;r=(n=e).value.includes("https://")||n.value.includes("http://"),o=n.getAttribute("maxLength")||1/0,i=n.getAttribute("minLength")||"",0===(u=n.value.length)?n.setCustomValidity("Você deve preencher este campo!"):"url"!==n.type||r?u<i?n.setCustomValidity("É necessário no mínimo ".concat(i," caracteres, atualmente você adicionou ").concat(u,"!")):u>o?n.setCustomValidity("É necessário no máximo ".concat(o," caracteres, atualmente você adicionou ").concat(u,"!")):(n.setCustomValidity(""),n.reportValidity()):n.setCustomValidity("insira uma URL válida!"),t._checkInputValidity(e),t._toggleButtonState()}))})),this._toggleButtonState()}}])&&J(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),H=function(t,e){var n=new P(l);return n.setEventListeners(),n.openImage(t,e)},G=new q({items:e,renderer:function(e){return new _(t,e,o,H).generateCard()}},r);a.forEach((function(e){return new Y(t,e).enableValidation()})),y.forEach((function(t){var n=t.popupSelector,r=t.openButton,o=new D(n,r,(function(){var t=".popup-edit"===n,r=o.inputValues(),u=r.cityName,a=r.imageUrl;t?function(t){var e=s.userName,n=s.userJob,r=t.inputValues(),o=new z(e,n);o.setUserInfo(r),o.getUserInfo()}(o):function(t,n,r){i.innerHTML="";var o={name:t,link:n,id:e.length+1,isLiked:!1};e.unshift(o),r.renderSection()}(u,a,G)}));o.setEventListeners()})),G.renderSection(),M=(new Date).getFullYear(),document.querySelector(".year").textContent=M}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,